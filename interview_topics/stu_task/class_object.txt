1. What will be the output of the following Python code?

class test:
     def __init__(self,a="Hello World"):
         self.a=a
 
     def display(self):
         print(self.a)
obj=test()
obj.display()
a) The program has an error because constructor can’t have default arguments
b) Nothing is displayed
c) “Hello World” is displayed
d) The program has an error display function doesn’t have parameters





2.What is setattr() used for?
a) To access the attribute of the object
b) To set an attribute
c) To check if an attribute exists or not
d) To delete an attribute









3. What will be the output of the following Python code?

 class test:
     def __init__(self,a):
         self.a=a
 
     def display(self):
         print(self.a)
obj=test()
obj.display()
a) Runs normally, doesn’t display anything
b) Displays 0, which is the automatic default value
c) Error as one argument is required while creating the object
d) Error as display function requires additional argument







4. Is the following Python code correct?

class A:
	def __init__(self,b):
		self.b=b
	def display(self):
		print(self.b)
obj=A("Hello")
del obj

a) True
b) False








5.What will be the output of the following Python code?

class test:
    def __init__(self):
        self.variable = 'Old'
        self.Change(self.variable)
    def Change(self, var):
        var = 'New'
obj=test()
print(obj.variable)
a) Error because function change can’t be called in the __init__ function
b) ‘New’ is printed
c) ‘Old’ is printed
d) Nothing is printed






6.What is Instantiation in terms of OOP terminology?
a) Deleting an instance of class
b) Modifying an instance of class
c) Copying an instance of class
d) Creating an instance of class




7.What will be the output of the following Python code?

class fruits:
    def __init__(self, price):
        self.price = price
obj=fruits(50)
 
obj.quantity=10
obj.bags=2
 
print(obj.quantity+len(obj.__dict__))
a) 12
b) 52
c) 13
d) 60




8. To create a class, use the keyword?

A. new
B. except 
C. class
D. object



9. All classes have a function called?

A. __init__
B. __init__()
C. init
D. init()







10.The __________ parameter is a reference to the current instance of the class, and is used to access variables that belong to the class.

A. __init__()
B. self
C. both A and B
D. None of the above






11.You can delete properties on objects by using the ______ keyword.

A. delete
B. dedl
C. del
D. drop






12. A variable that is defined inside a method and belongs only to the current instance of a class is known as?

A. Inheritance 
B. Instance variable
C. Function overloading
D. Instantiation 





13.The class has a documentation string, which can be accessed via?

A. ClassName
B. ClassName __doc__
C. __doc__
D. ClassName.__doc__







14. Which of the following does not correctly create an object instance?

A. puppy = Dog("Jamie")
B. dog = Dog("Jamie")
C. jamie = Dog()
D. pupper = new Dog("Jamie")




15.What does the following code output?

class People():

    def __init__(self, name):
      self.name = name

    def namePrint(self):
      print(self.name)

  person1 = People("Sally")
  person2 = People("Louise")
  person1.namePrint()
A. Sally
B. Louise
C. Sally Louise
D. person1



16.Which of the following statements is incorrect about the following code?

class People():

  def __init__(self, name):
    self.name = name

  def namePrint(self):
    print(self.name)

person1 = People("Sally")
person2 = People("Louise")
person1.namePrint()
A. person1 and person2 are two different instances of the People class.
B. The __init__ method is used to set initial values for attributes.
C. 'self' is not needed in def namePrint(self):
D. person2 has a different value for 'name' than person1.



17._________ is not a keyword, but by convention it is used to refer to the current instance (object) of a class.

A. class
B. def
C. self
D. init






18.Which of the following is the correct way to define an initializer method?

A. def __init__(title, author):
B. def __init__(self, title, author):
C. def __init__():
D. __init__(self, title, author):





19. How many objects and reference variables are there for the given Python code?

class A:
print("Inside class")
A()
A()
obj=A()
A. 2 and 1
B. 3 and 3
C. 3 and 1
D. 3 and 2






20.Which of the following is correct?

class A:
def __init__(self):
	self.count=5
	self.count=count+1
a=A()
print(a.count)


A. 0
B. 5
C. 6
D. Error






21.What are the methods which begin and end with two underscore characters called?
A. Special methodsB. In-built methodsC. User-defined methodsD. Additional methods




22.class Person:
   def __init__(self, first_name, last_name):
       self.first_name = first_name
       self.last_name = last_name

first_name = "XYZ"
person = Person(first_name, "ABC")
first_name = "LMN"
person.last_name = "PQR"
print(person.first_name, person.last_name)





XYZ ABC

XYZ PQR

LMN ABC

PQR ABC
